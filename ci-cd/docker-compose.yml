services:
  postgres:
    image: postgres:15
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - microservices-network

  userservice:
    build:
      context: ../backend/UserService
      dockerfile: Dockerfile
    ports:
      - "${USERSERVICE_HTTP_PORT}:8080"
      - "${USERSERVICE_HTTPS_PORT}:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=${USERSERVICE_CONNECTION_STRING}
      - Jwt__Key=${USERSERVICE_JWT_KEY}
      - Jwt__Issuer=${USERSERVICE_JWT_ISSUER}
      - Jwt__Audience=${USERSERVICE_JWT_AUDIENCE}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-network
      
  reviewservice:
    build:
      context: ../backend/ReviewService
      dockerfile: Dockerfile
    ports:
      - "${REVIEWSERVICE_HTTP_PORT}:8080"
      - "${REVIEWSERVICE_HTTPS_PORT}:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=${REVIEWSERVICE_CONNECTION_STRING}
      - Jwt__Key=${REVIEWSERVICE_JWT_KEY}
      - Jwt__Issuer=${REVIEWSERVICE_JWT_ISSUER}
      - Jwt__Audience=${REVIEWSERVICE_JWT_AUDIENCE}
      - Services__LocationService__BaseUrl=${REVIEWSERVICE_LOCATIONSERVICE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-network

  locationservice:
    build:
      context: ../backend/LocationService
      dockerfile: Dockerfile
    ports:
      - "${LOCATIONSERVICE_HTTP_PORT}:8080"
      - "${LOCATIONSERVICE_HTTPS_PORT}:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__DefaultConnection=${LOCATIONSERVICE_CONNECTION_STRING}
      - Jwt__Key=${LOCATIONSERVICE_JWT_KEY}
      - Jwt__Issuer=${LOCATIONSERVICE_JWT_ISSUER}
      - Jwt__Audience=${LOCATIONSERVICE_JWT_AUDIENCE}
      - Services__Url=${LOCATIONSERVICE_SERVICE_URL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge

volumes:
  postgres-data:
