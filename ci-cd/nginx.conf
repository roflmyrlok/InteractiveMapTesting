server {
    listen 80;
    server_name ${DOMAIN_NAME};

    # Set max body size for file uploads
    client_max_body_size 50M;

    # User Service
    location /api/users {
        proxy_pass http://userservice:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization; # ADDED: Forward Authorization header
        proxy_pass_header Authorization; # ADDED: Ensure Authorization header is passed through
    }

    location /api/auth {
        proxy_pass http://userservice:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization; # ADDED: Forward Authorization header
        proxy_pass_header Authorization; # ADDED: Ensure Authorization header is passed through
    }

    # Location Service
    location /api/locations {
        proxy_pass http://locationservice:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization; # ADDED: Forward Authorization header
        proxy_pass_header Authorization; # ADDED: Ensure Authorization header is passed through
    }

    # Review Service
    location /api/reviews {
        proxy_pass http://reviewservice:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Authorization $http_authorization; # ADDED: Forward Authorization header
        proxy_pass_header Authorization; # ADDED: Ensure Authorization header is passed through
        
        # Increase timeouts for image uploads
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Swagger UI - redirect to service-specific Swagger
    location /swagger/user {
        rewrite ^/swagger/user(.*) /swagger$1 break;
        proxy_pass http://userservice:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Authorization $http_authorization; # ADDED: Forward Authorization header
    }

    location /swagger/location {
        rewrite ^/swagger/location(.*) /swagger$1 break;
        proxy_pass http://locationservice:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Authorization $http_authorization; # ADDED: Forward Authorization header
    }

    location /swagger/review {
        rewrite ^/swagger/review(.*) /swagger$1 break;
        proxy_pass http://reviewservice:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Authorization $http_authorization; # ADDED: Forward Authorization header
    }

    # Default Swagger redirect
    location /swagger {
        proxy_pass http://userservice:8080/swagger;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Authorization $http_authorization; # ADDED: Forward Authorization header
    }

    # Health check endpoint
    location /health {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}